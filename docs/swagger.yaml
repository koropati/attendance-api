definitions:
  model.Ability:
    properties:
      action:
        type: string
      subject:
        type: string
    type: object
  model.ActivationTokenForm:
    properties:
      created_at:
        type: string
      created_by:
        type: integer
      deleted_by:
        type: integer
      token:
        type: string
      updated_at:
        type: string
      updated_by:
        type: integer
      user_id:
        type: integer
      valid:
        type: string
    type: object
  model.ActivationTokenResponseData:
    properties:
      code:
        type: integer
      data:
        $ref: '#/definitions/model.ActivationTokenForm'
      message:
        type: string
    type: object
  model.ActivationTokenResponseList:
    properties:
      code:
        type: integer
      data:
        items:
          $ref: '#/definitions/model.ActivationTokenForm'
        type: array
      message:
        type: string
      meta:
        $ref: '#/definitions/model.Meta'
    type: object
  model.AttendanceForm:
    properties:
      clock_in:
        type: integer
      clock_out:
        type: integer
      created_at:
        type: string
      created_by:
        type: integer
      date:
        type: string
      deleted_by:
        type: integer
      early_out:
        type: string
      id:
        type: integer
      late_in:
        type: string
      latitude_in:
        type: number
      latitude_out:
        type: number
      location_in:
        type: string
      location_out:
        type: string
      longitude_in:
        type: number
      longitude_out:
        type: number
      schedule_id:
        type: integer
      status:
        type: string
      status_presence:
        type: string
      time_zone_in:
        type: integer
      time_zone_out:
        type: integer
      updated_at:
        type: string
      updated_by:
        type: integer
      user_id:
        type: integer
    type: object
  model.AttendanceLogForm:
    properties:
      attendance_id:
        type: integer
      check_in:
        type: integer
      created_by:
        type: integer
      deleted_by:
        type: integer
      id:
        type: integer
      latitude:
        type: number
      location:
        type: string
      log_type:
        type: string
      longitude:
        type: number
      status:
        type: string
      time_zone:
        type: integer
      updated_by:
        type: integer
    type: object
  model.AttendanceLogResponseData:
    properties:
      code:
        type: integer
      data:
        $ref: '#/definitions/model.AttendanceLogForm'
      message:
        type: string
    type: object
  model.AttendanceLogResponseList:
    properties:
      code:
        type: integer
      data:
        items:
          $ref: '#/definitions/model.AttendanceLogForm'
        type: array
      message:
        type: string
      meta:
        $ref: '#/definitions/model.Meta'
    type: object
  model.AttendanceResponseData:
    properties:
      code:
        type: integer
      data:
        $ref: '#/definitions/model.AttendanceForm'
      message:
        type: string
    type: object
  model.AttendanceResponseList:
    properties:
      code:
        type: integer
      data:
        items:
          $ref: '#/definitions/model.AttendanceForm'
        type: array
      message:
        type: string
      meta:
        $ref: '#/definitions/model.Meta'
    type: object
  model.AttendanceSeries:
    properties:
      data:
        items:
          type: integer
        type: array
      date:
        items:
          type: string
        type: array
      month_period:
        type: integer
      name:
        type: string
      year_period:
        type: integer
    type: object
  model.AttendanceSummary:
    properties:
      leave_attendance:
        type: integer
      not_presence:
        type: integer
      presence:
        type: integer
      sick:
        type: integer
    type: object
  model.AuthDataResponseData:
    properties:
      token_data:
        $ref: '#/definitions/model.TokenData'
      user_data:
        $ref: '#/definitions/model.UserForm'
    type: object
  model.CheckInData:
    properties:
      latitude:
        type: number
      location:
        type: string
      longitude:
        type: number
      qr_code:
        type: string
      time_zone:
        type: integer
      user_id:
        type: integer
    type: object
  model.ConfirmForgotPassword:
    properties:
      confirm_password:
        type: string
      password:
        type: string
      token:
        type: string
    type: object
  model.DailyScheduleForm:
    properties:
      created_at:
        type: string
      created_by:
        type: integer
      deleted_by:
        type: integer
      end_time:
        type: string
      id:
        type: integer
      name:
        type: string
      owner_id:
        type: integer
      schedule_id:
        type: integer
      start_time:
        type: string
      updated_at:
        type: string
      updated_by:
        type: integer
    type: object
  model.DailyScheduleResponseData:
    properties:
      code:
        type: integer
      data:
        $ref: '#/definitions/model.DailyScheduleForm'
      message:
        type: string
    type: object
  model.DailyScheduleResponseList:
    properties:
      code:
        type: integer
      data:
        items:
          $ref: '#/definitions/model.DailyScheduleForm'
        type: array
      message:
        type: string
      meta:
        $ref: '#/definitions/model.Meta'
    type: object
  model.DashboardAcademic:
    properties:
      total_faculty:
        type: integer
      total_major:
        type: integer
      total_schedule:
        type: integer
      total_study_program:
        type: integer
      total_subject:
        type: integer
    type: object
  model.DashboardAcademicResponseData:
    properties:
      code:
        type: integer
      data:
        $ref: '#/definitions/model.DashboardAcademic'
      message:
        type: string
    type: object
  model.DashboardStudent:
    properties:
      total_student:
        type: integer
      total_student_active:
        type: integer
      total_student_non_active:
        type: integer
    type: object
  model.DashboardStudentResponseData:
    properties:
      code:
        type: integer
      data:
        $ref: '#/definitions/model.DashboardStudent'
      message:
        type: string
    type: object
  model.DashboardTeacher:
    properties:
      total_teacher:
        type: integer
      total_teacher_active:
        type: integer
      total_teacher_non_active:
        type: integer
    type: object
  model.DashboardTeacherResponseData:
    properties:
      code:
        type: integer
      data:
        $ref: '#/definitions/model.DashboardTeacher'
      message:
        type: string
    type: object
  model.DashboardUser:
    properties:
      total_super_admin:
        type: integer
      total_user:
        type: integer
      total_user_active:
        type: integer
      total_user_non_active:
        type: integer
    type: object
  model.DashboardUserResponseData:
    properties:
      code:
        type: integer
      data:
        $ref: '#/definitions/model.DashboardUser'
      message:
        type: string
    type: object
  model.FacultyForm:
    properties:
      code:
        type: string
      created_at:
        type: string
      created_by:
        type: integer
      deleted_by:
        type: integer
      id:
        type: integer
      name:
        type: string
      owner_id:
        type: integer
      summary:
        type: string
      updated_at:
        type: string
      updated_by:
        type: integer
    type: object
  model.FacultyResponseData:
    properties:
      code:
        type: integer
      data:
        $ref: '#/definitions/model.FacultyForm'
      message:
        type: string
    type: object
  model.FacultyResponseList:
    properties:
      code:
        type: integer
      data:
        items:
          $ref: '#/definitions/model.FacultyForm'
        type: array
      message:
        type: string
      meta:
        $ref: '#/definitions/model.Meta'
    type: object
  model.ForgotPassword:
    properties:
      email:
        type: string
    type: object
  model.Login:
    properties:
      password:
        type: string
      username:
        type: string
    type: object
  model.MajorForm:
    properties:
      code:
        type: string
      created_at:
        type: string
      created_by:
        type: integer
      deleted_by:
        type: integer
      faculty:
        $ref: '#/definitions/model.FacultyForm'
      faculty_id:
        type: integer
      id:
        type: integer
      name:
        type: string
      owner_id:
        type: integer
      summary:
        type: string
      updated_at:
        type: string
      updated_by:
        type: integer
    type: object
  model.MajorResponseData:
    properties:
      code:
        type: integer
      data:
        $ref: '#/definitions/model.MajorForm'
      message:
        type: string
    type: object
  model.MajorResponseList:
    properties:
      code:
        type: integer
      data:
        items:
          $ref: '#/definitions/model.MajorForm'
        type: array
      message:
        type: string
      meta:
        $ref: '#/definitions/model.Meta'
    type: object
  model.Meta:
    properties:
      current_page:
        type: integer
      current_record:
        type: integer
      total_page:
        type: integer
      total_record:
        type: integer
    type: object
  model.MySchedule:
    properties:
      end_date:
        type: string
      end_time:
        type: string
      late_duration:
        type: integer
      latitude:
        type: number
      longitude:
        type: number
      owner_id:
        type: integer
      qr_code:
        type: string
      radius:
        type: integer
      schedule_code:
        type: string
      schedule_id:
        type: integer
      schedule_name:
        type: string
      start_date:
        type: string
      start_time:
        type: string
      subject_code:
        type: string
      subject_id:
        type: integer
      subject_name:
        type: string
      teacher:
        type: string
    type: object
  model.MyScheduleResponseList:
    properties:
      code:
        type: integer
      data:
        items:
          $ref: '#/definitions/model.MySchedule'
        type: array
      message:
        type: string
    type: object
  model.PasswordResetTokenForm:
    properties:
      created_at:
        type: string
      created_by:
        type: integer
      deleted_by:
        type: integer
      id:
        type: integer
      token:
        type: string
      updated_at:
        type: string
      updated_by:
        type: integer
      user_id:
        type: integer
      valid:
        type: string
    type: object
  model.PasswordResetTokenResponseData:
    properties:
      code:
        type: integer
      data:
        $ref: '#/definitions/model.PasswordResetTokenForm'
      message:
        type: string
    type: object
  model.PasswordResetTokenResponseList:
    properties:
      code:
        type: integer
      data:
        items:
          $ref: '#/definitions/model.PasswordResetTokenForm'
        type: array
      message:
        type: string
      meta:
        $ref: '#/definitions/model.Meta'
    type: object
  model.Refresh:
    properties:
      refresh_token:
        type: string
    type: object
  model.Response:
    properties:
      code:
        type: integer
      message:
        type: string
    type: object
  model.ScheduleForm:
    properties:
      code:
        type: string
      created_at:
        type: string
      created_by:
        type: integer
      daily_schedule:
        items:
          $ref: '#/definitions/model.DailyScheduleForm'
        type: array
      deleted_by:
        type: integer
      end_date:
        type: string
      id:
        type: integer
      late_duration:
        description: in minute
        type: integer
      latitude:
        type: number
      longitude:
        type: number
      name:
        type: string
      owner:
        $ref: '#/definitions/model.UserForm'
      owner_id:
        type: integer
      qr_code:
        type: string
      radius:
        description: in metter
        type: integer
      start_date:
        type: string
      subject:
        $ref: '#/definitions/model.SubjectForm'
      subject_id:
        type: integer
      updated_at:
        type: string
      updated_by:
        type: integer
      user_in_rule:
        type: integer
    type: object
  model.ScheduleResponseData:
    properties:
      code:
        type: integer
      data:
        $ref: '#/definitions/model.ScheduleForm'
      message:
        type: string
    type: object
  model.ScheduleResponseList:
    properties:
      code:
        type: integer
      data:
        items:
          $ref: '#/definitions/model.ScheduleForm'
        type: array
      message:
        type: string
      meta:
        $ref: '#/definitions/model.Meta'
    type: object
  model.StudentForm:
    properties:
      address:
        type: string
      dob:
        type: string
      faculty:
        $ref: '#/definitions/model.FacultyForm'
      faculty_id:
        type: integer
      gender:
        type: string
      major:
        $ref: '#/definitions/model.MajorForm'
      major_id:
        type: integer
      nim:
        type: string
      study_program:
        $ref: '#/definitions/model.StudyProgramForm'
      study_program_id:
        type: integer
      user:
        $ref: '#/definitions/model.UserForm'
      user_id:
        type: integer
    type: object
  model.StudentResponseData:
    properties:
      code:
        type: integer
      data:
        $ref: '#/definitions/model.StudentForm'
      message:
        type: string
    type: object
  model.StudentResponseList:
    properties:
      code:
        type: integer
      data:
        items:
          $ref: '#/definitions/model.StudentForm'
        type: array
      message:
        type: string
      meta:
        $ref: '#/definitions/model.Meta'
    type: object
  model.StudyProgramForm:
    properties:
      code:
        type: string
      created_at:
        type: string
      created_by:
        type: integer
      deleted_by:
        type: integer
      id:
        type: integer
      major:
        $ref: '#/definitions/model.MajorForm'
      major_id:
        type: integer
      name:
        type: string
      owner_id:
        type: integer
      summary:
        type: string
      updated_at:
        type: string
      updated_by:
        type: integer
    type: object
  model.StudyProgramResponseData:
    properties:
      code:
        type: integer
      data:
        $ref: '#/definitions/model.StudyProgramForm'
      message:
        type: string
    type: object
  model.StudyProgramResponseList:
    properties:
      code:
        type: integer
      data:
        items:
          $ref: '#/definitions/model.StudyProgramForm'
        type: array
      message:
        type: string
      meta:
        $ref: '#/definitions/model.Meta'
    type: object
  model.SubjectForm:
    properties:
      code:
        type: string
      created_at:
        type: string
      created_by:
        type: integer
      deleted_by:
        type: integer
      id:
        type: integer
      name:
        type: string
      owner_id:
        type: integer
      summary:
        type: string
      updated_at:
        type: string
      updated_by:
        type: integer
    type: object
  model.SubjectResponseData:
    properties:
      code:
        type: integer
      data:
        $ref: '#/definitions/model.SubjectForm'
      message:
        type: string
    type: object
  model.SubjectResponseList:
    properties:
      code:
        type: integer
      data:
        items:
          $ref: '#/definitions/model.SubjectForm'
        type: array
      message:
        type: string
      meta:
        $ref: '#/definitions/model.Meta'
    type: object
  model.TeacherForm:
    properties:
      address:
        type: string
      dob:
        type: string
      faculty:
        $ref: '#/definitions/model.FacultyForm'
      faculty_id:
        type: integer
      gender:
        type: string
      major:
        $ref: '#/definitions/model.MajorForm'
      major_id:
        type: integer
      nip:
        type: string
      study_program:
        $ref: '#/definitions/model.StudyProgramForm'
      study_program_id:
        type: integer
      user:
        $ref: '#/definitions/model.UserForm'
      user_id:
        type: integer
    type: object
  model.TeacherResponseData:
    properties:
      code:
        type: integer
      data:
        $ref: '#/definitions/model.TeacherForm'
      message:
        type: string
    type: object
  model.TeacherResponseList:
    properties:
      code:
        type: integer
      data:
        items:
          $ref: '#/definitions/model.TeacherForm'
        type: array
      message:
        type: string
      meta:
        $ref: '#/definitions/model.Meta'
    type: object
  model.TodaySchedule:
    properties:
      attendance_id:
        type: integer
      clock_in:
        type: string
      clock_in_millis:
        type: integer
      clock_out:
        type: string
      clock_out_millis:
        type: integer
      end_time:
        type: string
      location_in:
        type: string
      location_out:
        type: string
      owner_id:
        type: integer
      qr_code:
        type: string
      schedule_code:
        type: string
      schedule_id:
        type: integer
      schedule_name:
        type: string
      start_time:
        type: string
      subject_id:
        type: integer
      subject_name:
        type: string
      teacher:
        type: string
      time_zone_in:
        type: integer
      time_zone_out:
        type: integer
    type: object
  model.TodayScheduleResponseList:
    properties:
      code:
        type: integer
      data:
        items:
          $ref: '#/definitions/model.TodaySchedule'
        type: array
      message:
        type: string
    type: object
  model.TokenData:
    properties:
      access_token:
        type: string
      expired_access_token:
        type: integer
      expired_refresh_token:
        type: integer
      refresh_token:
        type: string
    type: object
  model.UserForm:
    properties:
      avatar:
        type: string
      created_at:
        type: string
      created_by:
        type: integer
      deleted_by:
        type: integer
      email:
        type: string
      first_name:
        type: string
      handphone:
        type: string
      intro:
        type: string
      is_active:
        type: boolean
      is_admin:
        type: boolean
      is_super_admin:
        type: boolean
      is_user:
        type: boolean
      last_login:
        type: string
      last_name:
        type: string
      password:
        type: string
      profile:
        type: string
      role:
        type: string
      updated_at:
        type: string
      updated_by:
        type: integer
      user_abilities:
        items:
          $ref: '#/definitions/model.Ability'
        type: array
      username:
        type: string
    type: object
  model.UserResponseData:
    properties:
      code:
        type: integer
      data:
        $ref: '#/definitions/model.UserForm'
      message:
        type: string
    type: object
  model.UserResponseList:
    properties:
      code:
        type: integer
      data:
        items:
          $ref: '#/definitions/model.UserForm'
        type: array
      message:
        type: string
      meta:
        $ref: '#/definitions/model.Meta'
    type: object
  model.UserScheduleForm:
    properties:
      created_at:
        type: string
      created_by:
        type: integer
      deleted_by:
        type: integer
      id:
        type: integer
      owner_id:
        type: integer
      schedule:
        $ref: '#/definitions/model.ScheduleForm'
      schedule_id:
        type: integer
      updated_at:
        type: string
      updated_by:
        type: integer
      user:
        $ref: '#/definitions/model.UserForm'
      user_id:
        type: integer
    type: object
  model.UserScheduleResponseData:
    properties:
      code:
        type: integer
      data:
        $ref: '#/definitions/model.UserScheduleForm'
      message:
        type: string
    type: object
  model.UserScheduleResponseList:
    properties:
      code:
        type: integer
      data:
        items:
          $ref: '#/definitions/model.UserScheduleForm'
        type: array
      message:
        type: string
    type: object
  model.UserUpdatePasswordForm:
    properties:
      confirm_password:
        type: string
      current_password:
        type: string
      id:
        type: integer
      new_password:
        type: string
    type: object
info:
  contact:
    email: wokdev@gmail.com
    name: Admin CS
    url: https://attendance.wokdev.com
  description: A Attendance management service API in Go using Gin framework.
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  termsOfService: https://wokdev.com
  title: Attendance API
  version: "1.0"
paths:
  /activation-token/create:
    post:
      consumes:
      - application/json
      description: Create Activation Token
      parameters:
      - description: data
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/model.ActivationTokenForm'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.ActivationTokenResponseData'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/model.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/model.Response'
      security:
      - BearerTokenAuth: []
      summary: Create Activation Token
      tags:
      - Activation Token
  /activation-token/delete:
    delete:
      consumes:
      - application/json
      description: Delete Single Activation Token
      parameters:
      - description: id activation token
        in: query
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/model.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/model.Response'
      security:
      - BearerTokenAuth: []
      summary: Delete Single Activation Token
      tags:
      - Activation Token
  /activation-token/drop-down:
    get:
      consumes:
      - application/json
      description: Dropdown All Activation Token
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.ActivationTokenResponseList'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/model.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/model.Response'
      security:
      - BearerTokenAuth: []
      summary: Dropdown All Activation Token
      tags:
      - Activation Token
  /activation-token/list:
    get:
      consumes:
      - application/json
      description: List All Activation Token
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.ActivationTokenResponseList'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/model.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/model.Response'
      security:
      - BearerTokenAuth: []
      summary: List All Activation Token
      tags:
      - Activation Token
  /activation-token/retrieve:
    get:
      consumes:
      - application/json
      description: Retrieve Single Activation Token
      parameters:
      - description: id activation token
        in: query
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.ActivationTokenResponseData'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/model.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/model.Response'
      security:
      - BearerTokenAuth: []
      summary: Retrieve Single Activation Token
      tags:
      - Activation Token
  /activation-token/update:
    put:
      consumes:
      - application/json
      description: Update Single Activation Token
      parameters:
      - description: data
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/model.ActivationTokenForm'
      - description: id activation token
        in: query
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.ActivationTokenResponseData'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/model.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/model.Response'
      security:
      - BearerTokenAuth: []
      summary: Update Single Activation Token
      tags:
      - Activation Token
  /attendance-log/create:
    post:
      consumes:
      - application/json
      description: Create Attendance Log
      parameters:
      - description: data
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/model.AttendanceLogForm'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.AttendanceLogResponseData'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/model.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/model.Response'
      security:
      - BearerTokenAuth: []
      summary: Create New Attendance Log
      tags:
      - Attendance Log
  /attendance-log/delete:
    delete:
      consumes:
      - application/json
      description: Delete Single Attendance Log
      parameters:
      - description: id attendance log
        in: query
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/model.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/model.Response'
      security:
      - BearerTokenAuth: []
      summary: Delete Single Attendance Log
      tags:
      - Attendance Log
  /attendance-log/drop-down:
    get:
      consumes:
      - application/json
      description: Dropdown All Attendance Log
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.AttendanceLogResponseList'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/model.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/model.Response'
      security:
      - BearerTokenAuth: []
      summary: Dropdown All Attendance Log
      tags:
      - Attendance Log
  /attendance-log/list:
    get:
      consumes:
      - application/json
      description: List All Attendance Log
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.AttendanceLogResponseData'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/model.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/model.Response'
      security:
      - BearerTokenAuth: []
      summary: List All Attendance Log
      tags:
      - Attendance Log
  /attendance-log/retrieve:
    get:
      consumes:
      - application/json
      description: Retreive Single Attendance Log
      parameters:
      - description: id attendance log
        in: query
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.AttendanceLogResponseData'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/model.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/model.Response'
      security:
      - BearerTokenAuth: []
      summary: Retreive Single Attendance Log
      tags:
      - Attendance Log
  /attendance-log/update:
    put:
      consumes:
      - application/json
      description: Update Single Attendance Log
      parameters:
      - description: data
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/model.AttendanceLogForm'
      - description: id attendance log
        in: query
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.AttendanceLogResponseData'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/model.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/model.Response'
      security:
      - BearerTokenAuth: []
      summary: Update Single Attendance Log
      tags:
      - Attendance Log
  /attendance/clock-in:
    post:
      consumes:
      - application/json
      description: Clock In Attendance
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.CheckInData'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/model.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/model.Response'
      security:
      - BearerTokenAuth: []
      summary: Clock In Attendance
      tags:
      - Attendance
  /attendance/clock-out:
    post:
      consumes:
      - application/json
      description: Clock Out Attendance
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.CheckInData'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/model.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/model.Response'
      security:
      - BearerTokenAuth: []
      summary: Clock Out Attendance
      tags:
      - Attendance
  /attendance/create:
    post:
      consumes:
      - application/json
      description: Create Attendance
      parameters:
      - description: data
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/model.AttendanceForm'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.AttendanceResponseData'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/model.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/model.Response'
      security:
      - BearerTokenAuth: []
      summary: Create New Attendance
      tags:
      - Attendance
  /attendance/delete:
    delete:
      consumes:
      - application/json
      description: Delete Attendance
      parameters:
      - description: id attendance
        in: query
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/model.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/model.Response'
      security:
      - BearerTokenAuth: []
      summary: Delete Single Attendance
      tags:
      - Attendance
  /attendance/drop-down:
    get:
      consumes:
      - application/json
      description: Dropdown All Attendance
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.AttendanceResponseList'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/model.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/model.Response'
      security:
      - BearerTokenAuth: []
      summary: Dropdown All Attendance
      tags:
      - Attendance
  /attendance/list:
    get:
      consumes:
      - application/json
      description: List All Attendance
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.AttendanceResponseList'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/model.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/model.Response'
      security:
      - BearerTokenAuth: []
      summary: List All Attendance
      tags:
      - Attendance
  /attendance/retrieve:
    get:
      consumes:
      - application/json
      description: Retrieve Attendance
      parameters:
      - description: id attendance
        in: query
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.AttendanceResponseData'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/model.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/model.Response'
      security:
      - BearerTokenAuth: []
      summary: Retrieve Single Attendance
      tags:
      - Attendance
  /attendance/summary:
    get:
      consumes:
      - application/json
      description: Summary Attendance
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.AttendanceSummary'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/model.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/model.Response'
      security:
      - BearerTokenAuth: []
      summary: Summary Attendance
      tags:
      - Attendance
  /attendance/update:
    put:
      consumes:
      - application/json
      description: Update Attendance
      parameters:
      - description: id attendance
        in: query
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.AttendanceResponseData'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/model.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/model.Response'
      security:
      - BearerTokenAuth: []
      summary: Update Single Attendance
      tags:
      - Attendance
  /auth/activation:
    get:
      consumes:
      - application/json
      description: Set Active By Click This URL
      parameters:
      - description: token data
        in: query
        name: token
        required: true
        type: string
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/model.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/model.Response'
      summary: Set Active By Click This URL
      tags:
      - Auth
  /auth/confirm-forgot-password:
    post:
      consumes:
      - application/json
      description: Konfirmasi Lupa Password
      parameters:
      - description: User Data
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/model.ConfirmForgotPassword'
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/model.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/model.Response'
      summary: Konfirmasi Lupa Password (input password baru dengan token unik)
      tags:
      - Auth
  /auth/forgot-password:
    post:
      consumes:
      - application/json
      description: Lupa Password
      parameters:
      - description: User Data
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/model.ForgotPassword'
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/model.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/model.Response'
      summary: Lupa Password (input email)
      tags:
      - Auth
  /auth/login:
    post:
      consumes:
      - application/json
      description: Login User
      parameters:
      - description: Login Data
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/model.Login'
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.AuthDataResponseData'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/model.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/model.Response'
      summary: Login user with username and password
      tags:
      - Auth
  /auth/logout:
    get:
      consumes:
      - application/json
      description: Logout from system
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/model.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/model.Response'
      security:
      - BearerTokenAuth: []
      summary: Logout from system
      tags:
      - Auth
  /auth/refresh:
    post:
      consumes:
      - application/json
      description: Get New Access Token
      parameters:
      - description: Refresh Data
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/model.Refresh'
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.AuthDataResponseData'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/model.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/model.Response'
      summary: Get New Access Token using refresh token
      tags:
      - Auth
  /auth/register:
    post:
      consumes:
      - application/json
      description: Create new user
      parameters:
      - description: User Data
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/model.UserForm'
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/model.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/model.Response'
      summary: Create new user based on paramters
      tags:
      - Auth
  /daily-schedule/create:
    post:
      consumes:
      - application/json
      description: Create Daily Schedule
      parameters:
      - description: data
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/model.DailyScheduleForm'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.DailyScheduleResponseData'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/model.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/model.Response'
      security:
      - BearerTokenAuth: []
      summary: Create New Daily Schedule
      tags:
      - Daily Schedule
  /daily-schedule/delete:
    delete:
      consumes:
      - application/json
      description: Delete Single Daily Schedule
      parameters:
      - description: id daily schedule
        in: query
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.DailyScheduleResponseData'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/model.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/model.Response'
      security:
      - BearerTokenAuth: []
      summary: Delete Single Daily Schedule
      tags:
      - Daily Schedule
  /daily-schedule/drop-down:
    get:
      consumes:
      - application/json
      description: Dropdown All Daily Schedule
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.DailyScheduleResponseList'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/model.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/model.Response'
      security:
      - BearerTokenAuth: []
      summary: Dropdown All Daily Schedule
      tags:
      - Daily Schedule
  /daily-schedule/list:
    get:
      consumes:
      - application/json
      description: List All Daily Schedule
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.DailyScheduleResponseList'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/model.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/model.Response'
      security:
      - BearerTokenAuth: []
      summary: List All Daily Schedule
      tags:
      - Daily Schedule
  /daily-schedule/retrieve:
    get:
      consumes:
      - application/json
      description: Retrieve Single Daily Schedule
      parameters:
      - description: id daily schedule
        in: query
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.DailyScheduleResponseData'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/model.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/model.Response'
      security:
      - BearerTokenAuth: []
      summary: Retrieve Single Daily Schedule
      tags:
      - Daily Schedule
  /daily-schedule/update:
    put:
      consumes:
      - application/json
      description: Update Single Daily Schedule
      parameters:
      - description: data
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/model.DailyScheduleForm'
      - description: id daily schedule
        in: query
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.DailyScheduleResponseData'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/model.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/model.Response'
      security:
      - BearerTokenAuth: []
      summary: Update Single Daily Schedule
      tags:
      - Daily Schedule
  /dashboard/academic:
    get:
      consumes:
      - application/json
      description: Retrieve Dashboard Academic
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.DashboardAcademicResponseData'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/model.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/model.Response'
      security:
      - BearerTokenAuth: []
      summary: Retrieve Dashboard Academic
      tags:
      - Dashboard
  /dashboard/attendance:
    get:
      consumes:
      - application/json
      description: Retrieve Dashboard Attendance
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.AttendanceSeries'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/model.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/model.Response'
      security:
      - BearerTokenAuth: []
      summary: Retrieve Dashboard Attendance
      tags:
      - Dashboard
  /dashboard/student:
    get:
      consumes:
      - application/json
      description: Retrieve Dashboard Student
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.DashboardStudentResponseData'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/model.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/model.Response'
      security:
      - BearerTokenAuth: []
      summary: Retrieve Dashboard Student
      tags:
      - Dashboard
  /dashboard/teacher:
    get:
      consumes:
      - application/json
      description: Retrieve Dashboard Teacher
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.DashboardTeacherResponseData'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/model.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/model.Response'
      security:
      - BearerTokenAuth: []
      summary: Retrieve Dashboard Teacher
      tags:
      - Dashboard
  /dashboard/user:
    get:
      consumes:
      - application/json
      description: Retrieve Dashboard Users
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.DashboardUserResponseData'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/model.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/model.Response'
      security:
      - BearerTokenAuth: []
      summary: Retrieve Dashboard Users
      tags:
      - Dashboard
  /faculty/create:
    post:
      consumes:
      - application/json
      description: Create Faculty
      parameters:
      - description: data
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/model.FacultyForm'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.FacultyResponseData'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/model.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/model.Response'
      security:
      - BearerTokenAuth: []
      summary: Create New Faculty
      tags:
      - Faculty
  /faculty/delete:
    delete:
      consumes:
      - application/json
      description: Delete Single Faculty
      parameters:
      - description: id faculty
        in: query
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.FacultyResponseData'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/model.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/model.Response'
      security:
      - BearerTokenAuth: []
      summary: Delete Single Faculty
      tags:
      - Faculty
  /faculty/drop-down:
    get:
      consumes:
      - application/json
      description: Dropdown all Faculty
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.FacultyResponseList'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/model.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/model.Response'
      security:
      - BearerTokenAuth: []
      summary: Dropdown all Faculty
      tags:
      - Faculty
  /faculty/list:
    get:
      consumes:
      - application/json
      description: List all Faculty
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.FacultyResponseList'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/model.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/model.Response'
      security:
      - BearerTokenAuth: []
      summary: List all Faculty
      tags:
      - Faculty
  /faculty/retrieve:
    get:
      consumes:
      - application/json
      description: Retrieve Single Faculty
      parameters:
      - description: id faculty
        in: query
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.FacultyResponseData'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/model.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/model.Response'
      security:
      - BearerTokenAuth: []
      summary: Retrieve Single Faculty
      tags:
      - Faculty
  /faculty/update:
    put:
      consumes:
      - application/json
      description: Update Single Faculty
      parameters:
      - description: data
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/model.FacultyForm'
      - description: id faculty
        in: query
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.FacultyResponseData'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/model.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/model.Response'
      security:
      - BearerTokenAuth: []
      summary: Update Single Faculty
      tags:
      - Faculty
  /major/create:
    post:
      consumes:
      - application/json
      description: Create Major
      parameters:
      - description: data
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/model.MajorForm'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.MajorResponseData'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/model.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/model.Response'
      security:
      - BearerTokenAuth: []
      summary: Create New Major
      tags:
      - Major
  /major/delete:
    delete:
      consumes:
      - application/json
      description: Delete Single Major
      parameters:
      - description: id major
        in: query
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.MajorResponseData'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/model.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/model.Response'
      security:
      - BearerTokenAuth: []
      summary: Delete Single Major
      tags:
      - Major
  /major/drop-down:
    get:
      consumes:
      - application/json
      description: Dropdown all Major
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.MajorResponseList'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/model.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/model.Response'
      security:
      - BearerTokenAuth: []
      summary: Dropdown all Major
      tags:
      - Major
  /major/drop-down-by-faculty:
    get:
      consumes:
      - application/json
      description: Dropdown all Major By Faculty ID
      parameters:
      - description: id faculty
        in: query
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.MajorResponseList'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/model.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/model.Response'
      security:
      - BearerTokenAuth: []
      summary: Dropdown all Major By Faculty ID
      tags:
      - Major
  /major/list:
    get:
      consumes:
      - application/json
      description: List all Major
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.MajorResponseList'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/model.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/model.Response'
      security:
      - BearerTokenAuth: []
      summary: List all Major
      tags:
      - Major
  /major/retrieve:
    get:
      consumes:
      - application/json
      description: Retrieve Single Major
      parameters:
      - description: id major
        in: query
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.MajorResponseData'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/model.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/model.Response'
      security:
      - BearerTokenAuth: []
      summary: Retrieve Single Major
      tags:
      - Major
  /major/update:
    put:
      consumes:
      - application/json
      description: Update Single Major
      parameters:
      - description: data
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/model.MajorForm'
      - description: id major
        in: query
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.MajorResponseData'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/model.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/model.Response'
      security:
      - BearerTokenAuth: []
      summary: Update Single Major
      tags:
      - Major
  /my-schedule/list:
    get:
      consumes:
      - application/json
      description: My List Schedule
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.MyScheduleResponseList'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/model.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/model.Response'
      security:
      - BearerTokenAuth: []
      summary: My List Schedule
      tags:
      - My Schedule
  /my-schedule/today:
    get:
      consumes:
      - application/json
      description: List Today Schedule
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.TodayScheduleResponseList'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/model.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/model.Response'
      security:
      - BearerTokenAuth: []
      summary: List Today Schedule
      tags:
      - My Schedule
  /password-reset-token/create:
    post:
      consumes:
      - application/json
      description: Create Password Reset Token
      parameters:
      - description: data
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/model.PasswordResetTokenForm'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.PasswordResetTokenResponseData'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/model.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/model.Response'
      security:
      - BearerTokenAuth: []
      summary: Create New Password Reset Token
      tags:
      - Password Reset Token
  /password-reset-token/delete:
    delete:
      consumes:
      - application/json
      description: Delete Password Reset Token
      parameters:
      - description: id
        in: query
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.PasswordResetTokenResponseData'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/model.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/model.Response'
      security:
      - BearerTokenAuth: []
      summary: Delete Single Password Reset Token
      tags:
      - Password Reset Token
  /password-reset-token/drop-down:
    get:
      consumes:
      - application/json
      description: Dropdown all Password Reset Token
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.PasswordResetTokenResponseList'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/model.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/model.Response'
      security:
      - BearerTokenAuth: []
      summary: Dropdown all Password Reset Token
      tags:
      - Password Reset Token
  /password-reset-token/list:
    get:
      consumes:
      - application/json
      description: List all Password Reset Token
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.PasswordResetTokenResponseList'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/model.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/model.Response'
      security:
      - BearerTokenAuth: []
      summary: List all Password Reset Token
      tags:
      - Password Reset Token
  /password-reset-token/retrieve:
    get:
      consumes:
      - application/json
      description: Retrieve Password Reset Token
      parameters:
      - description: id
        in: query
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.PasswordResetTokenResponseData'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/model.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/model.Response'
      security:
      - BearerTokenAuth: []
      summary: Retrieve Single Password Reset Token
      tags:
      - Password Reset Token
  /password-reset-token/update:
    put:
      consumes:
      - application/json
      description: Update Password Reset Token
      parameters:
      - description: data
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/model.PasswordResetTokenForm'
      - description: id
        in: query
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.PasswordResetTokenResponseData'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/model.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/model.Response'
      security:
      - BearerTokenAuth: []
      summary: Update Single Password Reset Token
      tags:
      - Password Reset Token
  /profile/:
    get:
      consumes:
      - application/json
      description: Retrieve Profile
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.AuthDataResponseData'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/model.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/model.Response'
      security:
      - BearerTokenAuth: []
      summary: Retrieve Profile
      tags:
      - Profile
  /profile/student:
    get:
      consumes:
      - application/json
      description: Student Profile
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.StudentResponseData'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/model.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/model.Response'
      security:
      - BearerTokenAuth: []
      summary: Student Profile
      tags:
      - Profile
  /profile/teacher:
    get:
      consumes:
      - application/json
      description: Teacher Profile
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.TeacherResponseData'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/model.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/model.Response'
      security:
      - BearerTokenAuth: []
      summary: Teacher Profile
      tags:
      - Profile
  /profile/update:
    put:
      consumes:
      - application/json
      description: Update Profile
      parameters:
      - description: data
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/model.UserForm'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.UserResponseData'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/model.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/model.Response'
      security:
      - BearerTokenAuth: []
      summary: Update Profile
      tags:
      - Profile
  /profile/update-password:
    put:
      consumes:
      - application/json
      description: Update Password
      parameters:
      - description: data
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/model.UserUpdatePasswordForm'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/model.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/model.Response'
      security:
      - BearerTokenAuth: []
      summary: Update Password
      tags:
      - Profile
  /schedule/create:
    post:
      consumes:
      - application/json
      description: Create Schedule
      parameters:
      - description: data
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/model.ScheduleForm'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.ScheduleResponseData'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/model.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/model.Response'
      security:
      - BearerTokenAuth: []
      summary: Create New Schedule
      tags:
      - Schedule
  /schedule/delete:
    delete:
      consumes:
      - application/json
      description: Delete Schedule
      parameters:
      - description: id schedule
        in: query
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/model.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/model.Response'
      security:
      - BearerTokenAuth: []
      summary: Delete Schedule
      tags:
      - Schedule
  /schedule/drop-down:
    get:
      consumes:
      - application/json
      description: Dropdown Schedule
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.ScheduleResponseList'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/model.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/model.Response'
      security:
      - BearerTokenAuth: []
      summary: Dropdown Schedule
      tags:
      - Schedule
  /schedule/list:
    get:
      consumes:
      - application/json
      description: List Schedule
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.ScheduleResponseList'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/model.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/model.Response'
      security:
      - BearerTokenAuth: []
      summary: List Schedule
      tags:
      - Schedule
  /schedule/retrieve:
    get:
      consumes:
      - application/json
      description: Retrieve Schedule
      parameters:
      - description: id schedule
        in: query
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.ScheduleResponseData'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/model.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/model.Response'
      security:
      - BearerTokenAuth: []
      summary: Retrieve Single Schedule
      tags:
      - Schedule
  /schedule/update:
    put:
      consumes:
      - application/json
      description: Update Schedule
      parameters:
      - description: data
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/model.ScheduleForm'
      - description: id schedule
        in: query
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.ScheduleResponseData'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/model.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/model.Response'
      security:
      - BearerTokenAuth: []
      summary: Update Single Schedule
      tags:
      - Schedule
  /schedule/update-qr-code:
    put:
      consumes:
      - application/json
      description: Update QR Code
      parameters:
      - description: id schedule
        in: query
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.ScheduleResponseData'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/model.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/model.Response'
      security:
      - BearerTokenAuth: []
      summary: Update QR Code
      tags:
      - Schedule
  /student/create:
    post:
      consumes:
      - application/json
      description: Create Student
      parameters:
      - description: data
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/model.StudentForm'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.StudentResponseData'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/model.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/model.Response'
      security:
      - BearerTokenAuth: []
      summary: Create New Student
      tags:
      - Student
  /student/delete:
    delete:
      consumes:
      - application/json
      description: Delete Single Student
      parameters:
      - description: id student
        in: query
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.StudentResponseData'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/model.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/model.Response'
      security:
      - BearerTokenAuth: []
      summary: Delete Single Student
      tags:
      - Student
  /student/drop-down:
    get:
      consumes:
      - application/json
      description: Dropdown all Student
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.StudentResponseList'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/model.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/model.Response'
      security:
      - BearerTokenAuth: []
      summary: Dropdown all Student
      tags:
      - Student
  /student/list:
    get:
      consumes:
      - application/json
      description: List all Student
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.StudentResponseList'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/model.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/model.Response'
      security:
      - BearerTokenAuth: []
      summary: List all Student
      tags:
      - Student
  /student/retrieve:
    get:
      consumes:
      - application/json
      description: Retrieve Single Student
      parameters:
      - description: id student
        in: query
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.StudentResponseData'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/model.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/model.Response'
      security:
      - BearerTokenAuth: []
      summary: Retrieve Single Student
      tags:
      - Student
  /student/update:
    put:
      consumes:
      - application/json
      description: Update Single Student
      parameters:
      - description: data
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/model.StudentForm'
      - description: id student
        in: query
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.StudentResponseData'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/model.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/model.Response'
      security:
      - BearerTokenAuth: []
      summary: Update Single Student
      tags:
      - Student
  /study-program/create:
    post:
      consumes:
      - application/json
      description: Create Study Program
      parameters:
      - description: data
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/model.StudyProgramForm'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.StudyProgramResponseData'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/model.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/model.Response'
      security:
      - BearerTokenAuth: []
      summary: Create New Study Program
      tags:
      - Study Program
  /study-program/delete:
    delete:
      consumes:
      - application/json
      description: Delete Study Program
      parameters:
      - description: data
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/model.StudyProgramForm'
      - description: id study program
        in: query
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.StudyProgramResponseData'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/model.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/model.Response'
      security:
      - BearerTokenAuth: []
      summary: Delete single Study Program
      tags:
      - Study Program
  /study-program/drop-down:
    get:
      consumes:
      - application/json
      description: Dropdown Study Program
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.StudyProgramResponseList'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/model.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/model.Response'
      security:
      - BearerTokenAuth: []
      summary: Dropdown All Study Program
      tags:
      - Study Program
  /study-program/drop-down-by-major:
    get:
      consumes:
      - application/json
      description: Dropdown Study Program By Major ID
      parameters:
      - description: id major
        in: query
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.StudyProgramResponseList'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/model.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/model.Response'
      security:
      - BearerTokenAuth: []
      summary: Dropdown All Study Program By Major ID
      tags:
      - Study Program
  /study-program/list:
    get:
      consumes:
      - application/json
      description: List Study Program
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.StudyProgramResponseList'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/model.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/model.Response'
      security:
      - BearerTokenAuth: []
      summary: List All Study Program
      tags:
      - Study Program
  /study-program/retrieve:
    get:
      consumes:
      - application/json
      description: Retrieve Study Program
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.StudyProgramResponseData'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/model.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/model.Response'
      security:
      - BearerTokenAuth: []
      summary: Retrieve New Study Program
      tags:
      - Study Program
  /study-program/update:
    put:
      consumes:
      - application/json
      description: Update Study Program
      parameters:
      - description: data
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/model.StudyProgramForm'
      - description: id study program
        in: query
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.StudyProgramResponseData'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/model.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/model.Response'
      security:
      - BearerTokenAuth: []
      summary: Update single Study Program
      tags:
      - Study Program
  /subject/create:
    post:
      consumes:
      - application/json
      description: Create Subject
      parameters:
      - description: data
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/model.SubjectForm'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.SubjectResponseData'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/model.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/model.Response'
      security:
      - BearerTokenAuth: []
      summary: Create New Subject
      tags:
      - Subject
  /subject/delete:
    put:
      consumes:
      - application/json
      description: Delete Subject
      parameters:
      - description: id subject
        in: query
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/model.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/model.Response'
      security:
      - BearerTokenAuth: []
      summary: Delete Single Subject
      tags:
      - Subject
  /subject/drop-down:
    get:
      consumes:
      - application/json
      description: Dropdown Subject
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.SubjectResponseList'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/model.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/model.Response'
      security:
      - BearerTokenAuth: []
      summary: Dropdown All Subject
      tags:
      - Subject
  /subject/list:
    get:
      consumes:
      - application/json
      description: List Subject
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.SubjectResponseList'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/model.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/model.Response'
      security:
      - BearerTokenAuth: []
      summary: List All Subject
      tags:
      - Subject
  /subject/retrieve:
    get:
      consumes:
      - application/json
      description: Retrieve Subject
      parameters:
      - description: id subejct
        in: query
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.SubjectResponseData'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/model.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/model.Response'
      security:
      - BearerTokenAuth: []
      summary: Retrieve Single Subject
      tags:
      - Subject
  /subject/update:
    put:
      consumes:
      - application/json
      description: Update Subject
      parameters:
      - description: data
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/model.SubjectForm'
      - description: id subject
        in: query
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.SubjectResponseData'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/model.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/model.Response'
      security:
      - BearerTokenAuth: []
      summary: Update Single Subject
      tags:
      - Subject
  /teacher/create:
    post:
      consumes:
      - application/json
      description: Create Teacher
      parameters:
      - description: data
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/model.TeacherForm'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.TeacherResponseData'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/model.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/model.Response'
      security:
      - BearerTokenAuth: []
      summary: Create New Teacher
      tags:
      - Teacher
  /teacher/delete:
    delete:
      consumes:
      - application/json
      description: Delete Single Teacher
      parameters:
      - description: id teacher
        in: query
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.TeacherResponseData'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/model.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/model.Response'
      security:
      - BearerTokenAuth: []
      summary: Delete Single Teacher
      tags:
      - Teacher
  /teacher/drop-down:
    get:
      consumes:
      - application/json
      description: Dropdown all Teacher
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.TeacherResponseList'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/model.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/model.Response'
      security:
      - BearerTokenAuth: []
      summary: Dropdown all Teacher
      tags:
      - Teacher
  /teacher/list:
    get:
      consumes:
      - application/json
      description: List all Teacher
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.TeacherResponseList'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/model.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/model.Response'
      security:
      - BearerTokenAuth: []
      summary: List all Teacher
      tags:
      - Teacher
  /teacher/retrieve:
    get:
      consumes:
      - application/json
      description: Retrieve Single Teacher
      parameters:
      - description: id teacher
        in: query
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.TeacherResponseData'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/model.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/model.Response'
      security:
      - BearerTokenAuth: []
      summary: Retrieve Single Teacher
      tags:
      - Teacher
  /teacher/update:
    put:
      consumes:
      - application/json
      description: Update Single Teacher
      parameters:
      - description: data
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/model.TeacherForm'
      - description: id teacher
        in: query
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.TeacherResponseData'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/model.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/model.Response'
      security:
      - BearerTokenAuth: []
      summary: Update Single Teacher
      tags:
      - Teacher
  /user-schedule/create:
    post:
      consumes:
      - application/json
      description: Create User Schedule
      parameters:
      - description: data
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/model.UserScheduleForm'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.UserScheduleResponseData'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/model.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/model.Response'
      security:
      - BearerTokenAuth: []
      summary: Create New User Schedule
      tags:
      - User Schedule
  /user-schedule/delete:
    delete:
      consumes:
      - application/json
      description: Delete User Schedule
      parameters:
      - description: id user schedule
        in: query
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/model.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/model.Response'
      security:
      - BearerTokenAuth: []
      summary: Delete User Schedule
      tags:
      - User Schedule
  /user-schedule/drop-down:
    get:
      consumes:
      - application/json
      description: Dropdown All User Schedule
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.UserScheduleResponseList'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/model.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/model.Response'
      security:
      - BearerTokenAuth: []
      summary: Dropdown All User Schedule
      tags:
      - User Schedule
  /user-schedule/list:
    get:
      consumes:
      - application/json
      description: List All User Schedule
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.UserScheduleResponseList'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/model.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/model.Response'
      security:
      - BearerTokenAuth: []
      summary: List All User Schedule
      tags:
      - User Schedule
  /user-schedule/list/user-in-rule:
    get:
      consumes:
      - application/json
      description: List All User IN Schedule
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.StudentResponseList'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/model.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/model.Response'
      security:
      - BearerTokenAuth: []
      summary: List All User IN Schedule
      tags:
      - User Schedule
  /user-schedule/list/user-not-in-rule:
    get:
      consumes:
      - application/json
      description: List All User NOT IN Schedule
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.StudentResponseList'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/model.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/model.Response'
      security:
      - BearerTokenAuth: []
      summary: List All User NOT IN Schedule
      tags:
      - User Schedule
  /user-schedule/remove:
    delete:
      consumes:
      - application/json
      description: Remove User From Schedule
      parameters:
      - description: id schedule
        in: query
        name: schedule_id
        required: true
        type: string
      - description: id user
        in: query
        name: user_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/model.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/model.Response'
      security:
      - BearerTokenAuth: []
      summary: Remove User From Schedule
      tags:
      - User Schedule
  /user-schedule/retrieve:
    get:
      consumes:
      - application/json
      description: Retrieve User Schedule
      parameters:
      - description: id user schedule
        in: query
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.UserScheduleResponseData'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/model.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/model.Response'
      security:
      - BearerTokenAuth: []
      summary: Retrieve User Schedule
      tags:
      - User Schedule
  /user-schedule/update:
    put:
      consumes:
      - application/json
      description: Update User Schedule
      parameters:
      - description: data
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/model.UserScheduleForm'
      - description: id user schedule
        in: query
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.UserScheduleResponseData'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/model.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/model.Response'
      security:
      - BearerTokenAuth: []
      summary: Update User Schedule
      tags:
      - User Schedule
  /user/active:
    patch:
      consumes:
      - application/json
      description: Set Active Data User
      parameters:
      - description: id user
        in: query
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.UserResponseData'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/model.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/model.Response'
      security:
      - BearerTokenAuth: []
      summary: Set Active Data User
      tags:
      - User
  /user/create:
    post:
      consumes:
      - application/json
      description: Create user
      parameters:
      - description: data
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/model.UserForm'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/model.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/model.Response'
      security:
      - BearerTokenAuth: []
      summary: Create New User
      tags:
      - User
  /user/deactive:
    patch:
      consumes:
      - application/json
      description: Set Deactive Data User
      parameters:
      - description: id user
        in: query
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.UserResponseData'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/model.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/model.Response'
      security:
      - BearerTokenAuth: []
      summary: Set Deactive Data User
      tags:
      - User
  /user/delete:
    delete:
      consumes:
      - application/json
      description: Delete Single User
      parameters:
      - description: id user
        in: query
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/model.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/model.Response'
      security:
      - BearerTokenAuth: []
      summary: Delete Single User
      tags:
      - User
  /user/drop-down:
    get:
      consumes:
      - application/json
      description: List Data User
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.UserResponseList'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/model.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/model.Response'
      security:
      - BearerTokenAuth: []
      summary: List Data User
      tags:
      - User
  /user/list:
    get:
      consumes:
      - application/json
      description: List Data User
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.UserResponseList'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/model.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/model.Response'
      security:
      - BearerTokenAuth: []
      summary: List Data User
      tags:
      - User
  /user/retrieve:
    get:
      consumes:
      - application/json
      description: Retreive Single User
      parameters:
      - description: id user
        in: query
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.UserResponseData'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/model.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/model.Response'
      security:
      - BearerTokenAuth: []
      summary: Retreive Single User
      tags:
      - User
  /user/update:
    put:
      consumes:
      - application/json
      description: Update Single User
      parameters:
      - description: id user
        in: query
        name: id
        required: true
        type: string
      - description: data
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/model.UserForm'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.UserResponseData'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/model.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/model.Response'
      security:
      - BearerTokenAuth: []
      summary: Update Single User
      tags:
      - User
securityDefinitions:
  BearerTokenAuth:
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"
